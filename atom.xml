<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ethan</title>
  
  <subtitle>Ethan&#39;s blog</subtitle>
  <link href="http://yoursite.com/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-08-30T12:13:17.998Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Ethan</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Markdown 公式指导手册</title>
    <link href="http://yoursite.com/2020/08/30/MarkDown%E5%85%AC%E5%BC%8F%E6%8C%87%E5%AF%BC%E6%89%8B%E5%86%8C/"/>
    <id>http://yoursite.com/2020/08/30/MarkDown%E5%85%AC%E5%BC%8F%E6%8C%87%E5%AF%BC%E6%89%8B%E5%86%8C/</id>
    <published>2020-08-29T16:00:00.000Z</published>
    <updated>2020-08-30T12:13:17.998Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Markdown-公式指导手册"><a href="#Markdown-公式指导手册" class="headerlink" title="Markdown 公式指导手册"></a>Markdown 公式指导手册</h1><p>标签： Tutorial</p><hr><blockquote><p>点击跳转至 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown" target="_blank" rel="noopener">Cmd Markdown 简明语法手册</a> ，立刻开始 Cmd Markdown 编辑阅读器的记录和写作之旅！</p></blockquote><hr><blockquote><p>本文为 MathJax 在 Cmd Markdown 环境下的语法指引。</p><p>Cmd Markdown 编辑阅读器支持 $\LaTeX$ 编辑显示支持，例如：$\sum_{i=1}^n a_i=0$，访问 <a href="http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference" target="_blank" rel="noopener">MathJax</a> 以参考更多使用方法。</p><p>右键点击每一个公式，选择 <strong>[Show Math As] → [TeX Commands]</strong> 以查看该公式的命令详情。</p></blockquote><p>[TOC]</p><hr><h1 id="一、公式使用参考"><a href="#一、公式使用参考" class="headerlink" title="一、公式使用参考"></a>一、公式使用参考</h1><h2 id="1．如何插入公式"><a href="#1．如何插入公式" class="headerlink" title="1．如何插入公式"></a>1．如何插入公式</h2><p>$\LaTeX$ 的数学公式有两种：行中公式和独立公式。行中公式放在文中与其它文字混编，独立公式单独成行。</p><p>行中公式可以用如下方法表示：</p><p>:        $ 数学公式 $</p><p>独立公式可以用如下方法表示：</p><p>:        <script type="math/tex">数学公式</script></p><p>自动编号的公式可以用如下方法表示：<br>:    若需要手动编号，参见 <a href="#14大括号和行标的使用">大括号和行标的使用</a> 。</p><p>:       \begin{equation}<br>数学公式<br>\label{eq:当前公式名}<br>\end{equation}</p><p><strong>自动编号后的公式可在全文任意处使用 <code>\eqref{eq:公式名}</code> 语句引用。</strong><br>- 例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ J_\alpha(x) &#x3D; \sum_&#123;m&#x3D;0&#125;^\infty \frac&#123;(-1)^m&#125;&#123;m! \Gamma (m + \alpha + 1)&#125; &#123;\left(&#123; \frac&#123;x&#125;&#123;2&#125; &#125;\right)&#125;^&#123;2m + \alpha&#125; \text &#123;，行内公式示例&#125; $</span><br></pre></td></tr></table></figure>- 例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$$ J_\alpha(x) &#x3D; \sum_&#123;m&#x3D;0&#125;^\infty \frac&#123;(-1)^m&#125;&#123;m! \Gamma (m + \alpha + 1)&#125; &#123;\left(&#123; \frac&#123;x&#125;&#123;2&#125; &#125;\right)&#125;^&#123;2m + \alpha&#125; \text &#123;，独立公式示例&#125; $$</span><br></pre></td></tr></table></figure>- 显示：$$ J_\alpha(x) = \sum_{m=0}^\infty \frac{(-1)^m}{m! \Gamma (m + \alpha + 1)} {\left({ \frac{x}{2} }\right)}^{2m + \alpha} \text {，独立公式示例} $$- 例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">在公式 \eqref&#123;eq:sample&#125; 中，我们看到了这个被自动编号的公式。</span><br><span class="line"></span><br><span class="line">\begin&#123;equation&#125;</span><br><span class="line">E&#x3D;mc^2 \text&#123;，自动编号公式示例&#125;</span><br><span class="line">\label&#123;eq:Sample&#125;</span><br><span class="line">\end&#123;equation&#125;</span><br></pre></td></tr></table></figure>- 显示：$$在公式 \eqref{eq:sample} 中，我们看到了这个被自动编号的公式。$$\begin{equation}E=mc^2 \text{，自动编号公式示例}\label{eq:sample}\end{equation}##2．如何输入上下标`^` 表示上标, `_` 表示下标。如果上下标的内容多于一个字符，需要用 `{}` 将这些内容括成一个整体。上下标可以嵌套，也可以同时使用。- 例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$$ x^&#123;y^z&#125;&#x3D;(1+&#123;\rm e&#125;^x)^&#123;-2xy^w&#125; $$</span><br></pre></td></tr></table></figure>- 显示：$$ x^{y^z}=(1+{\rm e}^x)^{-2xy^w} $$另外，如果要在左右两边都有上下标，可以用 `\sideset` 命令。- 例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$$ \sideset&#123;^1_2&#125;&#123;^3_4&#125;\bigotimes $$</span><br></pre></td></tr></table></figure>- 显示：$$\sideset{^1_2}{^3_4}\bigotimes$$##3．如何输入括号和分隔符`()`、`[]` 和 `|` 表示符号本身，使用 `\{\}` 来表示 `{}` 。当要显示大号的括号或分隔符时，要用 `\left` 和 `\right` 命令。一些特殊的括号：|输入|显示|输入|显示||:--:|:--:|:--:|:--:||\langle|$\langle$|\rangle|$\rangle$||\lceil|$\lceil$|\rceil|$\rceil$||\lfloor|$\lfloor$|\rfloor|$\rfloor$||\lbrace|$\lbrace$|\rbrace|$\rbrace$|- 例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$$ f(x,y,z) &#x3D; 3y^2z \left( 3+\frac&#123;7x+5&#125;&#123;1+y^2&#125; \right) $$</span><br></pre></td></tr></table></figure>- 显示：$$ f(x,y,z) = 3y^2z \left( 3+\frac{7x+5}{1+y^2} \right) $$有时候要用 `\left.` 或 `\right.` 进行匹配而不显示本身。- 例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$$ \left. \frac&#123;&#123;\rm d&#125;u&#125;&#123;&#123;\rm d&#125;x&#125; \right| _&#123;x&#x3D;0&#125; $$</span><br></pre></td></tr></table></figure>- 显示：$$ \left. \frac{{\rm d}u}{{\rm d}x} \right| _{x=0} $$##4．如何输入分数通常使用 `\frac {分子} {分母}` 命令产生一个分数，分数可嵌套。便捷情况可直接输入 `\frac ab` 来快速生成一个 $\frac ab$ 。如果分式很复杂，亦可使用 `分子 \over 分母` 命令，此时分数仅有一层。- 例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$$\frac&#123;a-1&#125;&#123;b-1&#125; \quad and \quad &#123;a+1\over b+1&#125;$$</span><br></pre></td></tr></table></figure>- 显示：$$\frac{a-1}{b-1} \quad and \quad {a+1\over b+1}$$##5．如何输入开方使用 `\sqrt [根指数，省略时为2] {被开方数}` 命令输入开方。- 例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$$\sqrt&#123;2&#125; \quad and \quad \sqrt[n]&#123;3&#125;$$</span><br></pre></td></tr></table></figure>- 显示：$$\sqrt{2} \quad and \quad \sqrt[n]{3}$$##6．如何输入省略号数学公式中常见的省略号有两种，`\ldots` 表示与文本底线对齐的省略号，`\cdots` 表示与文本中线对齐的省略号。- 例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$$f(x_1,x_2,\underbrace&#123;\ldots&#125;_&#123;\rm ldots&#125; ,x_n) &#x3D; x_1^2 + x_2^2 + \underbrace&#123;\cdots&#125;_&#123;\rm cdots&#125; + x_n^2$$</span><br></pre></td></tr></table></figure>- 显示：$$f(x_1,x_2,\underbrace{\ldots}_{\rm ldots} ,x_n) = x_1^2 + x_2^2 + \underbrace{\cdots}_{\rm cdots} + x_n^2$$##7．如何输入矢量使用 `\vec{矢量}` 来自动产生一个矢量。也可以使用 `\overrightarrow` 等命令自定义字母上方的符号。- 例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$$\vec&#123;a&#125; \cdot \vec&#123;b&#125;&#x3D;0$$</span><br></pre></td></tr></table></figure>- 显示：$$\vec{a} \cdot \vec{b}=0$$- 例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$$\overleftarrow&#123;xy&#125; \quad and \quad \overleftrightarrow&#123;xy&#125; \quad and \quad \overrightarrow&#123;xy&#125;$$</span><br></pre></td></tr></table></figure>- 显示：$$\overleftarrow{xy} \quad and \quad \overleftrightarrow{xy} \quad and \quad \overrightarrow{xy}$$##8．如何输入积分使用 `\int_积分下限^积分上限 {被积表达式}` 来输入一个积分。例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$$\int_0^1 &#123;x^2&#125; \,&#123;\rm d&#125;x$$</span><br></pre></td></tr></table></figure>显示：$$\int_0^1 {x^2} \,{\rm d}x$$本例中 `\,` 和 `{\rm d}` 部分可省略，但建议加入，能使式子更美观。##9．如何输入极限运算使用 `\lim_{变量 \to 表达式} 表达式` 来输入一个极限。如有需求，可以更改 `\to` 符号至任意符号。例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$$ \lim_&#123;n \to +\infty&#125; \frac&#123;1&#125;&#123;n(n+1)&#125; \quad and \quad \lim_&#123;x\leftarrow&#123;示例&#125;&#125; \frac&#123;1&#125;&#123;n(n+1)&#125; $$</span><br></pre></td></tr></table></figure>显示：$$\lim_{n \to +\infty} \frac{1}{n(n+1)} \quad and \quad \lim_{x\leftarrow{示例}} \frac{1}{n(n+1)}$$##10．如何输入累加、累乘运算使用 `\sum_{下标表达式}^{上标表达式} {累加表达式}` 来输入一个累加。与之类似，使用 `\prod` `\bigcup` `\bigcap` 来分别输入累乘、并集和交集。此类符号在行内显示时上下标表达式将会移至右上角和右下角。- 例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$$\sum_&#123;i&#x3D;1&#125;^n \frac&#123;1&#125;&#123;i^2&#125; \quad and \quad \prod_&#123;i&#x3D;1&#125;^n \frac&#123;1&#125;&#123;i^2&#125; \quad and \quad \bigcup_&#123;i&#x3D;1&#125;^&#123;2&#125; R$$</span><br></pre></td></tr></table></figure>- 显示：$$\sum_{i=1}^n \frac{1}{i^2} \quad and \quad \prod_{i=1}^n \frac{1}{i^2} \quad and \quad \bigcup_{i=1}^{2} R$$##11．如何输入希腊字母输入 `\小写希腊字母英文全称` 和 `\首字母大写希腊字母英文全称` 来分别输入小写和大写希腊字母。**对于大写希腊字母与现有字母相同的，直接输入大写字母即可。**|输入|显示|输入|显示|输入|显示|输入|显示||:--:|:--:|:--:|:--:|:--:|:--:|:--:|:--:||\alpha|$\alpha$|A|$A$|\beta|$\beta$|B|$B$||\gamma|$\gamma$|\Gamma|$\Gamma$|\delta|$\delta$|\Delta|$\Delta$||\epsilon|$\epsilon$|E|$E$|\zeta|$\zeta$|Z|$Z$||\eta|$\eta$|H|$H$|\theta|$\theta$|\Theta|$\Theta$||\iota|$\iota$|I|$I$|\kappa|$\kappa$|K|$K$||\lambda|$\lambda$|\Lambda|$\Lambda$|\mu|$\mu$|M|$M$||\nu|$\nu$|N|$N$|\xi|$\xi$|\Xi|$\Xi$||o|$o$|O|$O$|\pi|$\pi$|\Pi|$\Pi$||\rho|$\rho$|P|$P$|\sigma|$\sigma$|\Sigma|$\Sigma$||\tau|$\tau$|T|$T$|\upsilon|$\upsilon$|\Upsilon|$\Upsilon$||\phi|$\phi$|\Phi|$\Phi$|\chi|$\chi$|X|$X$||\psi|$\psi$|\Psi|$\Psi$|\omega|$\omega$|\Omega|$\Omega$|**部分字母有变量专用形式，以 `\var-` 开头。**|小写形式|大写形式|变量形式|显示||:--:|:--:|:--:|:--:||\epsilon|E|\varepsilon|$\epsilon \mid E \mid \varepsilon$||\theta|\Theta|\vartheta|$\theta \mid \Theta \mid \vartheta$||\rho|P|\varrho|$\rho \mid P \mid \varrho$||\sigma|\Sigma|\varsigma|$\sigma \mid \Sigma \mid \varsigma$||\phi|\Phi|\varphi|$\phi \mid \Phi \mid \varphi$|##12．如何输入其它特殊字符> **若需要显示更大或更小的字符，在符号前插入 `\large` 或 `\small` 命令。**> 若找不到需要的符号，使用 [$\rm{Detexify^2}$](http://detexify.kirelabs.org/classify.html) 来画出想要的符号。###(1)．关系运算符|输入|显示|输入|显示|输入|显示|输入|显示||:--:|:--:|:--:|:--:|:--:|:--:|:--:|:--:||\pm|$\pm$|\times|$\times$|\div|$\div$|\mid|$\mid$||\nmid|$\nmid$|\cdot|$\cdot$|\circ|$\circ$|\ast|$\ast$||\bigodot|$\bigodot$|\bigotimes|$\bigotimes$|\bigoplus|$\bigoplus$|\leq|$\leq$||\geq|$\geq$|\neq|$\neq$|\approx|$\approx$|\equiv|$\equiv$||\sum|$\sum$|\prod|$\prod$|\coprod|$\coprod$|\backslash|$\backslash$|###(2)．集合运算符|输入|显示|输入|显示|输入|显示||:--:|:--:|:--:|:--:|:--:|:--:||\emptyset|$\emptyset$|\in|$\in$|\notin|$\notin$||\subset|$\subset$|\supset|$\supset$|\subseteq|$\subseteq$||\supseteq|$\supseteq$|\bigcap|$\bigcap$|\bigcup|$\bigcup$||\bigvee|$\bigvee$|\bigwedge|$\bigwedge$|\biguplus|$\biguplus$|###(3)．对数运算符|输入|显示|输入|显示|输入|显示||:--:|:--:|:--:|:--:|:--:|:--:||\log|$\log$|\lg|$\lg$|\ln|$\ln$|###(4)．三角运算符|输入|显示|输入|显示|输入|显示||:--:|:--:|:--:|:--:|:--:|:--:||30^\circ|$30^\circ$|\bot|$\bot$|\angle A|$\angle A$||\sin|$\sin$|\cos|$\cos$|\tan|$\tan$||\csc|$\csc$|\sec|$\sec$|\cot|$\cot$|###(5)．微积分运算符|输入|显示|输入|显示|输入|显示||:--:|:--:|:--:|:--:|:--:|:--:||\int|$\int$|\iint|$\iint$|\iiint|$\iiint$||\iiiint|$\iiiint$|\oint|$\oint$|\prime|$\prime$||\lim|$\lim$|\infty|$\infty$|\nabla|$\nabla$|###(6)．逻辑运算符|输入|显示|输入|显示|输入|显示||:--:|:--:|:--:|:--:|:--:|:--:||\because|$\because$|\therefore|$\therefore$||\forall|$\forall$|\exists|$\exists$|\not\subset|$\not\subset$||\not<|$\not<$|\not>|$\not>$|\not=|$\not=$|###(7)．戴帽符号|输入|显示|输入|显示||:--:|:--:|:--:|:--:||\hat{xy}|$\hat{xy}$|\widehat{xyz}|$\widehat{xyz}$||\tilde{xy}|$\tilde{xy}$|\widetilde{xyz}|$\widetilde{xyz}$||\check{x}|$\check{x}$|\breve{y}|$\breve{y}$||\grave{x}|$\grave{x}$|\acute{y}|$\acute{y}$|###(8)．连线符号|输入|显示||:--:|:--:||\fbox{a+b+c+d}|$\fbox{a+b+c+d}$||\overleftarrow{a+b+c+d}|$\overleftarrow{a+b+c+d}$||\overrightarrow{a+b+c+d}|$\overrightarrow{a+b+c+d}$||\overleftrightarrow{a+b+c+d}|$\overleftrightarrow{a+b+c+d}$||\underleftarrow{a+b+c+d}|$\underleftarrow{a+b+c+d}$||\underrightarrow{a+b+c+d}|$\underrightarrow{a+b+c+d}$||\underleftrightarrow{a+b+c+d}|$\underleftrightarrow{a+b+c+d}$||\overline{a+b+c+d}|$\overline{a+b+c+d}$||\underline{a+b+c+d}|$\underline{a+b+c+d}$||\overbrace{a+b+c+d}^{Sample}|$\overbrace{a+b+c+d}^{Sample}$||\underbrace{a+b+c+d}_{Sample}|$\underbrace{a+b+c+d}_{Sample}$||\overbrace{a+\underbrace{b+c}_{1.0}+d}^{2.0}|$\overbrace{a+\underbrace{b+c}_{1.0}+d}^{2.0}$||\underbrace{a\cdot a\cdots a}_{b\text{ times}}|$\underbrace{a\cdot a\cdots a}_{b\text{ times}}$||\underrightarrow{1℃/min} | $\underrightarrow{1℃/min}$ |###(9)．箭头符号- 推荐使用符号：|输入|显示|输入|显示|输入|显示||:--:|:--:|:--:|:--:|:--:|:--:||\to|$\to$|\mapsto|$\mapsto$||\implies|$\implies$|\iff|$\iff$|\impliedby|$\impliedby$|- 其它可用符号：|输入|显示|输入|显示||:--:|:--:|:--:|:--:||\uparrow|$\uparrow$|\Uparrow|$\Uparrow$||\downarrow|$\downarrow$|\Downarrow|$\Downarrow$||\leftarrow|$\leftarrow$|\Leftarrow|$\Leftarrow$||\rightarrow|$\rightarrow$|\Rightarrow|$\Rightarrow$||\leftrightarrow|$\leftrightarrow$|\Leftrightarrow|$\Leftrightarrow$||\longleftarrow|$\longleftarrow$|\Longleftarrow|$\Longleftarrow$||\longrightarrow|$\longrightarrow$|\Longrightarrow|$\Longrightarrow$||\longleftrightarrow|$\longleftrightarrow$|\Longleftrightarrow|$\Longleftrightarrow$|##13．如何进行字体转换若要对公式的某一部分字符进行字体转换，可以用 `{\字体 {需转换的部分字符}}` 命令，其中 `\字体` 部分可以参照下表选择合适的字体。一般情况下，公式默认为意大利体 $italic$ 。示例中 **全部大写** 的字体仅大写可用。|输入|说明|显示|输入|说明|显示||:--:|:--:|:--:|:--:|:--:|:--:|:--:||\rm|罗马体|$\rm{Sample}$|\cal|花体|$\cal{SAMPLE}$||\it|意大利体|$\it{Sample}$|\Bbb|黑板粗体|$\Bbb{SAMPLE}$||\bf|粗体|$\bf{Sample}$|\mit|数学斜体|$\mit{SAMPLE}$||\sf|等线体|$\sf{Sample}$|\scr|手写体|$\scr{SAMPLE}$||\tt|打字机体|$\tt{Sample}$||\frak|旧德式字体|$\frak{Sample}$|转换字体十分常用，例如在积分中：- 例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">\begin&#123;array&#125;&#123;cc&#125;</span><br><span class="line">\mathrm&#123;Bad&#125; &amp; \mathrm&#123;Better&#125; \\</span><br><span class="line">\hline \\</span><br><span class="line">\int_0^1 x^2 dx &amp; \int_0^1 x^2 \,&#123;\rm d&#125;x</span><br><span class="line">\end&#123;array&#125;</span><br></pre></td></tr></table></figure>- 显示：\begin{array}{cc}\mathrm{Bad} & \mathrm{Better} \\\hline \\\int_0^1 x^2 dx & \int_0^1 x^2 \,{\rm d}x\end{array}注意比较两个式子间 $dx$ 与 ${\rm d} x$ 的不同。使用 `\operatorname` 命令也可以达到相同的效果，详见 [定义新的符号 \operatorname](#1定义新的符号-operatorname) 。##14．大括号和行标的使用使用 `\left` 和 `\right` 来创建自动匹配高度的 (圆括号)，[方括号] 和 {花括号} 。在每个公式末尾前使用 `\tag{行标}` 来实现行标。- 例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">f\left(</span><br><span class="line">   \left[ </span><br><span class="line">     \frac&#123;</span><br><span class="line">       1+\left\&#123;x,y\right\&#125;</span><br><span class="line">     &#125;&#123;</span><br><span class="line">       \left(</span><br><span class="line">          \frac&#123;x&#125;&#123;y&#125;+\frac&#123;y&#125;&#123;x&#125;</span><br><span class="line">       \right)</span><br><span class="line">       \left(u+1\right)</span><br><span class="line">     &#125;+a</span><br><span class="line">   \right]^&#123;3&#x2F;2&#125;</span><br><span class="line">\right)</span><br><span class="line">\tag&#123;行标&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>- 显示：$$f\left(   \left[      \frac{       1+\left\{x,y\right\}     }{       \left(          \frac{x}{y}+\frac{y}{x}       \right)       \left(u+1\right)     }+a   \right]^{3/2}\right)\tag{行标}$$如果你需要在不同的行显示对应括号，可以在每一行对应处使用 `\left.` 或 `\right.` 来放一个"影子"括号：- 例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\begin&#123;aligned&#125;</span><br><span class="line">a&#x3D;&amp;\left(1+2+3+  \cdots \right. \\</span><br><span class="line">&amp; \cdots+ \left. \infty-2+\infty-1+\infty\right)</span><br><span class="line">\end&#123;aligned&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>- 显示：$$\begin{aligned}a=&\left(1+2+3+  \cdots \right. \\& \cdots+ \left. \infty-2+\infty-1+\infty\right)\end{aligned}$$如果你需要将行内显示的分隔符也变大，可以使用 `\middle` 命令：- 例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\left\langle  </span><br><span class="line">  q</span><br><span class="line">\middle\|</span><br><span class="line">  \frac&#123;\frac&#123;x&#125;&#123;y&#125;&#125;&#123;\frac&#123;u&#125;&#123;v&#125;&#125;</span><br><span class="line">\middle| </span><br><span class="line">   p </span><br><span class="line">\right\rangle</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>- 显示：$$\left\langle    q\middle\|  \frac{\frac{x}{y}}{\frac{u}{v}}\middle|    p \right\rangle$$##15．其它命令###(1)．定义新的符号 \operatorname查询 [关于此命令的定义](http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference/15077#15077) 和 [关于此命令的讨论](http://meta.math.stackexchange.com/search?q=operatorname) 来进一步了解此命令。- 例子： <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$$ \operatorname&#123;Symbol&#125; A $$</span><br></pre></td></tr></table></figure>- 显示： $$\operatorname{Symbol} A$$###(2)．添加注释文字 \text在 `\text {文字}` 中仍可以使用 `$公式$` 插入其它公式。- 例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$$ f(n)&#x3D; \begin&#123;cases&#125; n&#x2F;2, &amp; \text &#123;if $n$ is even&#125; \\ 3n+1, &amp; \text&#123;if $n$ is odd&#125; \end&#123;cases&#125; $$</span><br></pre></td></tr></table></figure>- 显示：$$ f(n)= \begin{cases} n/2, & \text {if $n$ is even} \\ 3n+1, & \text{if $n$ is odd} \end{cases} $$###(3)．在字符间加入空格有四种宽度的空格可以使用： `\,`、`\;`、`\quad` 和 `\qquad` 。- 例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$$ a \, b \mid a \; b \mid a \quad b \mid a \qquad b $$</span><br></pre></td></tr></table></figure>- 显示：$$ a \, b \mid a \; b \mid a \quad b \mid a \qquad b $$当然，使用 `\text {n个空格}` 也可以达到同样效果。###(4)．更改文字颜色使用 `\color{颜色}{文字}` 来更改特定的文字颜色。更改文字颜色 **需要浏览器支持** ，如果浏览器不知道你所需的颜色，那么文字将被渲染为黑色。对于较旧的浏览器（HTML4与CSS2），以下颜色是被支持的：|输入|显示|输入|显示||:--:|:--:|:--:|:--:||black|$\color{black}{text}$|grey|$\color{grey}{text}$||silver|$\color{silver}{text}$|white|$\color{white}{text}$||maroon|$\color{maroon}{text}$|red|$\color{red}{text}$||yellow|$\color{yellow}{text}$|lime|$\color{lime}{text}$||olive|$\color{olive}{text}$|green|$\color{green}{text}$||teal|$\color{teal}{text}$|auqa|$\color{auqa}{text}$||blue|$\color{blue}{text}$|navy|$\color{navy}{text}$||purple|$\color{purple}{text}$|fuchsia|$\color{fuchsia}{text}$|对于较新的浏览器（HTML5与CSS3），额外的124种颜色将被支持：输入 `\color {#rgb} {text}` 来自定义更多的颜色，其中 `#rgb` 的 `r` `g` `b` 可输入 `0-9` 和 `a-f` 来表示红色、绿色和蓝色的纯度（饱和度）。- 例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">\begin&#123;array&#125;&#123;|rrrrrrrr|&#125;\hline</span><br><span class="line">\verb+#000+ &amp; \color&#123;#000&#125;&#123;text&#125; &amp; &amp; &amp;</span><br><span class="line">\verb+#00F+ &amp; \color&#123;#00F&#125;&#123;text&#125; &amp; &amp; \\</span><br><span class="line">&amp; &amp; \verb+#0F0+ &amp; \color&#123;#0F0&#125;&#123;text&#125; &amp;</span><br><span class="line">&amp; &amp; \verb+#0FF+ &amp; \color&#123;#0FF&#125;&#123;text&#125;\\</span><br><span class="line">\verb+#F00+ &amp; \color&#123;#F00&#125;&#123;text&#125; &amp; &amp; &amp;</span><br><span class="line">\verb+#F0F+ &amp; \color&#123;#F0F&#125;&#123;text&#125; &amp; &amp; \\</span><br><span class="line">&amp; &amp; \verb+#FF0+ &amp; \color&#123;#FF0&#125;&#123;text&#125; &amp;</span><br><span class="line">&amp; &amp; \verb+#FFF+ &amp; \color&#123;#FFF&#125;&#123;text&#125;\\</span><br><span class="line">\hline</span><br><span class="line">\end&#123;array&#125;</span><br></pre></td></tr></table></figure>- 显示：\begin{array}{|rrrrrrrr|}\hline\verb+#000+ & \color{#000}{text} & & &\verb+#00F+ & \color{#00F}{text} & & \\& & \verb+#0F0+ & \color{#0F0}{text} && & \verb+#0FF+ & \color{#0FF}{text}\\\verb+#F00+ & \color{#F00}{text} & & &\verb+#F0F+ & \color{#F0F}{text} & & \\& & \verb+#FF0+ & \color{#FF0}{text} && & \verb+#FFF+ & \color{#FFF}{text}\\\hline\end{array}- 例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">\begin&#123;array&#125;&#123;|rrrrrrrr|&#125;</span><br><span class="line">\hline</span><br><span class="line">\verb+#000+ &amp; \color&#123;#000&#125;&#123;text&#125; &amp; \verb+#005+ &amp; \color&#123;#005&#125;&#123;text&#125; &amp; \verb+#00A+ &amp; \color&#123;#00A&#125;&#123;text&#125; &amp; \verb+#00F+ &amp; \color&#123;#00F&#125;&#123;text&#125;  \\</span><br><span class="line">\verb+#500+ &amp; \color&#123;#500&#125;&#123;text&#125; &amp; \verb+#505+ &amp; \color&#123;#505&#125;&#123;text&#125; &amp; \verb+#50A+ &amp; \color&#123;#50A&#125;&#123;text&#125; &amp; \verb+#50F+ &amp; \color&#123;#50F&#125;&#123;text&#125;  \\</span><br><span class="line">\verb+#A00+ &amp; \color&#123;#A00&#125;&#123;text&#125; &amp; \verb+#A05+ &amp; \color&#123;#A05&#125;&#123;text&#125; &amp; \verb+#A0A+ &amp; \color&#123;#A0A&#125;&#123;text&#125; &amp; \verb+#A0F+ &amp; \color&#123;#A0F&#125;&#123;text&#125;  \\</span><br><span class="line">\verb+#F00+ &amp; \color&#123;#F00&#125;&#123;text&#125; &amp; \verb+#F05+ &amp; \color&#123;#F05&#125;&#123;text&#125; &amp; \verb+#F0A+ &amp; \color&#123;#F0A&#125;&#123;text&#125; &amp; \verb+#F0F+ &amp; \color&#123;#F0F&#125;&#123;text&#125;  \\</span><br><span class="line">\hline</span><br><span class="line">\verb+#080+ &amp; \color&#123;#080&#125;&#123;text&#125; &amp; \verb+#085+ &amp; \color&#123;#085&#125;&#123;text&#125; &amp; \verb+#08A+ &amp; \color&#123;#08A&#125;&#123;text&#125; &amp; \verb+#08F+ &amp; \color&#123;#08F&#125;&#123;text&#125;  \\</span><br><span class="line">\verb+#580+ &amp; \color&#123;#580&#125;&#123;text&#125; &amp; \verb+#585+ &amp; \color&#123;#585&#125;&#123;text&#125; &amp; \verb+#58A+ &amp; \color&#123;#58A&#125;&#123;text&#125; &amp; \verb+#58F+ &amp; \color&#123;#58F&#125;&#123;text&#125;  \\</span><br><span class="line">\verb+#A80+ &amp; \color&#123;#A80&#125;&#123;text&#125; &amp; \verb+#A85+ &amp; \color&#123;#A85&#125;&#123;text&#125; &amp; \verb+#A8A+ &amp; \color&#123;#A8A&#125;&#123;text&#125; &amp; \verb+#A8F+ &amp; \color&#123;#A8F&#125;&#123;text&#125;  \\</span><br><span class="line">\verb+#F80+ &amp; \color&#123;#F80&#125;&#123;text&#125; &amp; \verb+#F85+ &amp; \color&#123;#F85&#125;&#123;text&#125; &amp; \verb+#F8A+ &amp; \color&#123;#F8A&#125;&#123;text&#125; &amp; \verb+#F8F+ &amp; \color&#123;#F8F&#125;&#123;text&#125;  \\</span><br><span class="line">\hline</span><br><span class="line">\verb+#0F0+ &amp; \color&#123;#0F0&#125;&#123;text&#125; &amp; \verb+#0F5+ &amp; \color&#123;#0F5&#125;&#123;text&#125; &amp; \verb+#0FA+ &amp; \color&#123;#0FA&#125;&#123;text&#125; &amp; \verb+#0FF+ &amp; \color&#123;#0FF&#125;&#123;text&#125;  \\</span><br><span class="line">\verb+#5F0+ &amp; \color&#123;#5F0&#125;&#123;text&#125; &amp; \verb+#5F5+ &amp; \color&#123;#5F5&#125;&#123;text&#125; &amp; \verb+#5FA+ &amp; \color&#123;#5FA&#125;&#123;text&#125; &amp; \verb+#5FF+ &amp; \color&#123;#5FF&#125;&#123;text&#125;  \\</span><br><span class="line">\verb+#AF0+ &amp; \color&#123;#AF0&#125;&#123;text&#125; &amp; \verb+#AF5+ &amp; \color&#123;#AF5&#125;&#123;text&#125; &amp; \verb+#AFA+ &amp; \color&#123;#AFA&#125;&#123;text&#125; &amp; \verb+#AFF+ &amp; \color&#123;#AFF&#125;&#123;text&#125;  \\</span><br><span class="line">\verb+#FF0+ &amp; \color&#123;#FF0&#125;&#123;text&#125; &amp; \verb+#FF5+ &amp; \color&#123;#FF5&#125;&#123;text&#125; &amp; \verb+#FFA+ &amp; \color&#123;#FFA&#125;&#123;text&#125; &amp; \verb+#FFF+ &amp; \color&#123;#FFF&#125;&#123;text&#125;  \\</span><br><span class="line">\hline</span><br><span class="line">\end&#123;array&#125;</span><br></pre></td></tr></table></figure>- 显示：\begin{array}{|rrrrrrrr|}\hline\verb+#000+ & \color{#000}{text} & \verb+#005+ & \color{#005}{text} & \verb+#00A+ & \color{#00A}{text} & \verb+#00F+ & \color{#00F}{text}  \\\verb+#500+ & \color{#500}{text} & \verb+#505+ & \color{#505}{text} & \verb+#50A+ & \color{#50A}{text} & \verb+#50F+ & \color{#50F}{text}  \\\verb+#A00+ & \color{#A00}{text} & \verb+#A05+ & \color{#A05}{text} & \verb+#A0A+ & \color{#A0A}{text} & \verb+#A0F+ & \color{#A0F}{text}  \\\verb+#F00+ & \color{#F00}{text} & \verb+#F05+ & \color{#F05}{text} & \verb+#F0A+ & \color{#F0A}{text} & \verb+#F0F+ & \color{#F0F}{text}  \\\hline\verb+#080+ & \color{#080}{text} & \verb+#085+ & \color{#085}{text} & \verb+#08A+ & \color{#08A}{text} & \verb+#08F+ & \color{#08F}{text}  \\\verb+#580+ & \color{#580}{text} & \verb+#585+ & \color{#585}{text} & \verb+#58A+ & \color{#58A}{text} & \verb+#58F+ & \color{#58F}{text}  \\\verb+#A80+ & \color{#A80}{text} & \verb+#A85+ & \color{#A85}{text} & \verb+#A8A+ & \color{#A8A}{text} & \verb+#A8F+ & \color{#A8F}{text}  \\\verb+#F80+ & \color{#F80}{text} & \verb+#F85+ & \color{#F85}{text} & \verb+#F8A+ & \color{#F8A}{text} & \verb+#F8F+ & \color{#F8F}{text}  \\\hline\verb+#0F0+ & \color{#0F0}{text} & \verb+#0F5+ & \color{#0F5}{text} & \verb+#0FA+ & \color{#0FA}{text} & \verb+#0FF+ & \color{#0FF}{text}  \\\verb+#5F0+ & \color{#5F0}{text} & \verb+#5F5+ & \color{#5F5}{text} & \verb+#5FA+ & \color{#5FA}{text} & \verb+#5FF+ & \color{#5FF}{text}  \\\verb+#AF0+ & \color{#AF0}{text} & \verb+#AF5+ & \color{#AF5}{text} & \verb+#AFA+ & \color{#AFA}{text} & \verb+#AFF+ & \color{#AFF}{text}  \\\verb+#FF0+ & \color{#FF0}{text} & \verb+#FF5+ & \color{#FF5}{text} & \verb+#FFA+ & \color{#FFA}{text} & \verb+#FFF+ & \color{#FFF}{text}  \\\hline\end{array}###(5)．添加删除线使用删除线功能必须声明 `$$` 符号。在公式内使用 `\require{cancel}` 来允许 **片段删除线** 的显示。声明片段删除线后，使用 `\cancel{字符}`、`\bcancel{字符}`、`\xcancel{字符}` 和 `\cancelto{字符}` 来实现各种片段删除线效果。- 例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\require&#123;cancel&#125;\begin&#123;array&#125;&#123;rl&#125;</span><br><span class="line">\verb|y+\cancel&#123;x&#125;| &amp; y+\cancel&#123;x&#125;\\</span><br><span class="line">\verb|\cancel&#123;y+x&#125;| &amp; \cancel&#123;y+x&#125;\\</span><br><span class="line">\verb|y+\bcancel&#123;x&#125;| &amp; y+\bcancel&#123;x&#125;\\</span><br><span class="line">\verb|y+\xcancel&#123;x&#125;| &amp; y+\xcancel&#123;x&#125;\\</span><br><span class="line">\verb|y+\cancelto&#123;0&#125;&#123;x&#125;| &amp; y+\cancelto&#123;0&#125;&#123;x&#125;\\</span><br><span class="line">\verb+\frac&#123;1\cancel9&#125;&#123;\cancel95&#125; &#x3D; \frac15+&amp; \frac&#123;1\cancel9&#125;&#123;\cancel95&#125; &#x3D; \frac15 \\</span><br><span class="line">\end&#123;array&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>- 显示：$$\require{cancel}\begin{array}{rl}\verb|y+\cancel{x}| & y+\cancel{x}\\\verb|\cancel{y+x}| & \cancel{y+x}\\\verb|y+\bcancel{x}| & y+\bcancel{x}\\\verb|y+\xcancel{x}| & y+\xcancel{x}\\\verb|y+\cancelto{0}{x}| & y+\cancelto{0}{x}\\\verb+\frac{1\cancel9}{\cancel95} = \frac15+& \frac{1\cancel9}{\cancel95} = \frac15 \\\end{array}$$使用 `\require{enclose}` 来允许 **整段删除线** 的显示。声明整段删除线后，使用 `\enclose{删除线效果}{字符}` 来实现各种整段删除线效果。其中，删除线效果有 `horizontalstrike`、`verticalstrike`、`updiagonalstrike` 和 `downdiagonalstrike`，可叠加使用。- 例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\require&#123;enclose&#125;\begin&#123;array&#125;&#123;rl&#125;</span><br><span class="line">\verb|\enclose&#123;horizontalstrike&#125;&#123;x+y&#125;| &amp; \enclose&#123;horizontalstrike&#125;&#123;x+y&#125;\\</span><br><span class="line">\verb|\enclose&#123;verticalstrike&#125;&#123;\frac xy&#125;| &amp; \enclose&#123;verticalstrike&#125;&#123;\frac xy&#125;\\</span><br><span class="line">\verb|\enclose&#123;updiagonalstrike&#125;&#123;x+y&#125;| &amp; \enclose&#123;updiagonalstrike&#125;&#123;x+y&#125;\\</span><br><span class="line">\verb|\enclose&#123;downdiagonalstrike&#125;&#123;x+y&#125;| &amp; \enclose&#123;downdiagonalstrike&#125;&#123;x+y&#125;\\</span><br><span class="line">\verb|\enclose&#123;horizontalstrike,updiagonalstrike&#125;&#123;x+y&#125;| &amp; \enclose&#123;horizontalstrike,updiagonalstrike&#125;&#123;x+y&#125;\\</span><br><span class="line">\end&#123;array&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>- 显示：$$\require{enclose}\begin{array}{rl}\verb|\enclose{horizontalstrike}{x+y}| & \enclose{horizontalstrike}{x+y}\\\verb|\enclose{verticalstrike}{\frac xy}| & \enclose{verticalstrike}{\frac xy}\\\verb|\enclose{updiagonalstrike}{x+y}| & \enclose{updiagonalstrike}{x+y}\\\verb|\enclose{downdiagonalstrike}{x+y}| & \enclose{downdiagonalstrike}{x+y}\\\verb|\enclose{horizontalstrike,updiagonalstrike}{x+y}| & \enclose{horizontalstrike,updiagonalstrike}{x+y}\\\end{array}$$此外， `\enclose` 命令还可以产生包围的边框和圆等，参见 [MathML Menclose Documentation](https://developer.mozilla.org/en-US/docs/Web/MathML/Element/menclose) 以查看更多效果。#二、矩阵使用参考##1．如何输入无框矩阵在开头使用 `begin{matrix}`，在结尾使用 `end{matrix}`，在中间插入矩阵元素，每个元素之间插入 `&` ，并在每行结尾处使用 `\\` 。使用矩阵时必须声明 `$` 或 `$$` 符号。- 例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">        \begin&#123;matrix&#125;</span><br><span class="line">        1 &amp; x &amp; x^2 \\</span><br><span class="line">        1 &amp; y &amp; y^2 \\</span><br><span class="line">        1 &amp; z &amp; z^2 \\</span><br><span class="line">        \end&#123;matrix&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>- 显示：$$        \begin{matrix}        1 & x & x^2 \\        1 & y & y^2 \\        1 & z & z^2 \\        \end{matrix}$$##2．如何输入边框矩阵在开头将 `matrix` 替换为 `pmatrix` `bmatrix` `Bmatrix` `vmatrix` `Vmatrix` 。- 例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ \begin&#123;matrix&#125; 1 &amp; 2 \\ 3 &amp; 4 \\ \end&#123;matrix&#125; $</span><br><span class="line">$ \begin&#123;pmatrix&#125; 1 &amp; 2 \\ 3 &amp; 4 \\ \end&#123;pmatrix&#125; $</span><br><span class="line">$ \begin&#123;bmatrix&#125; 1 &amp; 2 \\ 3 &amp; 4 \\ \end&#123;bmatrix&#125; $</span><br><span class="line">$ \begin&#123;Bmatrix&#125; 1 &amp; 2 \\ 3 &amp; 4 \\ \end&#123;Bmatrix&#125; $</span><br><span class="line">$ \begin&#123;vmatrix&#125; 1 &amp; 2 \\ 3 &amp; 4 \\ \end&#123;vmatrix&#125; $</span><br><span class="line">$ \begin&#123;Vmatrix&#125; 1 &amp; 2 \\ 3 &amp; 4 \\ \end&#123;Vmatrix&#125; $</span><br></pre></td></tr></table></figure>- 显示：|matrix|pmatrix|bmatrix|Bmatrix|vmatrix|Vmatrix||:--:|:--:|:--:|:--:|:--:|:--:||$ \begin{matrix} 1 & 2 \\ 3 & 4 \\ \end{matrix} $|$ \begin{pmatrix} 1 & 2 \\ 3 & 4 \\ \end{pmatrix} $|$ \begin{bmatrix} 1 & 2 \\ 3 & 4 \\ \end{bmatrix} $|$ \begin{Bmatrix} 1 & 2 \\ 3 & 4 \\ \end{Bmatrix} $|$ \begin{vmatrix} 1 & 2 \\ 3 & 4 \\ \end{vmatrix} $|$ \begin{Vmatrix} 1 & 2 \\ 3 & 4 \\ \end{Vmatrix} $|##3．如何输入带省略符号的矩阵使用 `\cdots` $\cdots$ , `\ddots` $\ddots$ , `\vdots` $\vdots$ 来输入省略符号。- 例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">        \begin&#123;pmatrix&#125;</span><br><span class="line">        1 &amp; a_1 &amp; a_1^2 &amp; \cdots &amp; a_1^n \\</span><br><span class="line">        1 &amp; a_2 &amp; a_2^2 &amp; \cdots &amp; a_2^n \\</span><br><span class="line">        \vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots \\</span><br><span class="line">        1 &amp; a_m &amp; a_m^2 &amp; \cdots &amp; a_m^n \\</span><br><span class="line">        \end&#123;pmatrix&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>- 显示：$$        \begin{pmatrix}        1 & a_1 & a_1^2 & \cdots & a_1^n \\        1 & a_2 & a_2^2 & \cdots & a_2^n \\        \vdots & \vdots & \vdots & \ddots & \vdots \\        1 & a_m & a_m^2 & \cdots & a_m^n \\        \end{pmatrix}$$##4．如何输入带分割符号的矩阵详见"[数组使用参考](#五数组与表格使用参考)"。- 例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\left[</span><br><span class="line">    \begin&#123;array&#125;&#123;cc|c&#125;</span><br><span class="line">      1&amp;2&amp;3\\</span><br><span class="line">      4&amp;5&amp;6</span><br><span class="line">    \end&#123;array&#125;</span><br><span class="line">\right]</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>- 显示：$$\left[    \begin{array}{cc|c}      1&2&3\\      4&5&6    \end{array}\right]$$其中 `cc|c` 代表在一个三列矩阵中的第二和第三列之间插入分割线。##5．如何输入行中矩阵若想在一行内显示矩阵，使用`\bigl(\begin{smallmatrix} ... \end{smallmatrix}\bigr)`。- 例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这是一个行中矩阵的示例 $\bigl( \begin&#123;smallmatrix&#125; a &amp; b \\ c &amp; d \end&#123;smallmatrix&#125; \bigr)$ 。</span><br></pre></td></tr></table></figure>- 显示：这是一个行中矩阵的示例 $\bigl( \begin{smallmatrix} a & b \\ c & d \end{smallmatrix} \bigr)$ 。#三、方程式序列使用参考##1．如何输入一个方程式序列人们经常想要一列整齐且居中的方程式序列。使用 `\begin{align}…\end{align}` 来创造一列方程式，其中在每行结尾处使用 `\\` 。使用方程式序列无需声明公式符号 `$` 或 `$$` 。请注意 `{align}` 语句是 **自动编号** 的，使用 `{align*}` 声明停止自动编号(^wuyufei批注)。- 例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">\begin&#123;align&#125;</span><br><span class="line">\sqrt&#123;37&#125; &amp; &#x3D; \sqrt&#123;\frac&#123;73^2-1&#125;&#123;12^2&#125;&#125; \\</span><br><span class="line"> &amp; &#x3D; \sqrt&#123;\frac&#123;73^2&#125;&#123;12^2&#125;\cdot\frac&#123;73^2-1&#125;&#123;73^2&#125;&#125; \\ </span><br><span class="line"> &amp; &#x3D; \sqrt&#123;\frac&#123;73^2&#125;&#123;12^2&#125;&#125;\sqrt&#123;\frac&#123;73^2-1&#125;&#123;73^2&#125;&#125; \\</span><br><span class="line"> &amp; &#x3D; \frac&#123;73&#125;&#123;12&#125;\sqrt&#123;1 - \frac&#123;1&#125;&#123;73^2&#125;&#125; \\ </span><br><span class="line"> &amp; \approx \frac&#123;73&#125;&#123;12&#125;\left(1 - \frac&#123;1&#125;&#123;2\cdot73^2&#125;\right)</span><br><span class="line">\end&#123;align&#125;</span><br></pre></td></tr></table></figure>- 显示：\begin{align}\sqrt{37} & = \sqrt{\frac{73^2-1}{12^2}} \\ & = \sqrt{\frac{73^2}{12^2}\cdot\frac{73^2-1}{73^2}} \\  & = \sqrt{\frac{73^2}{12^2}}\sqrt{\frac{73^2-1}{73^2}} \\ & = \frac{73}{12}\sqrt{1 - \frac{1}{73^2}} \\  & \approx \frac{73}{12}\left(1 - \frac{1}{2\cdot73^2}\right)\end{align}本例中每行公式的编号续自 [如何插入公式](#1如何插入公式) 中的自动编号公式 \eqref{eq:sample} 。##2．在一个方程式序列的每一行中注明原因在 `{align}` 中灵活组合 `\text` 和 `\tag` 语句。`\tag` 语句编号优先级高于自动编号。- 例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">\begin&#123;align&#125;</span><br><span class="line">   v + w &amp; &#x3D; 0  &amp;\text&#123;Given&#125; \tag 1\\</span><br><span class="line">   -w &amp; &#x3D; -w + 0 &amp; \text&#123;additive identity&#125; \tag 2\\</span><br><span class="line">   -w + 0 &amp; &#x3D; -w + (v + w) &amp; \text&#123;equations $(1)$ and $(2)$&#125;</span><br><span class="line">\end&#123;align&#125;</span><br></pre></td></tr></table></figure>- 显示：\begin{align}   v + w & = 0  &\text{Given} \tag 1\\   -w & = -w + 0 & \text{additive identity} \tag 2\\   -w + 0 & = -w + (v + w) & \text{equations $(1)$ and $(2)$}\end{align}本例中第一、第二行的自动编号被 `\tag` 语句覆盖，第三行的编号为自动编号。#四、条件表达式使用参考##1．如何输入一个条件表达式使用 `begin{cases}` 来创造一组条件表达式，在每一行条件中插入 `&` 来指定需要对齐的内容，并在每一行结尾处使用 `\\`，以 `end{cases}` 结束。条件表达式无需声明 `$` 或 `$$` 符号。- 例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">        f(n) &#x3D;</span><br><span class="line">        \begin&#123;cases&#125;</span><br><span class="line">        n&#x2F;2,  &amp; \text&#123;if $n$ is even&#125; \\</span><br><span class="line">        3n+1, &amp; \text&#123;if $n$ is odd&#125;</span><br><span class="line">        \end&#123;cases&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>- 显示：$$        f(n) =        \begin{cases}        n/2,  & \text{if $n$ is even} \\        3n+1, & \text{if $n$ is odd}        \end{cases}$$##2．如何输入一个左侧对齐的条件表达式若想让文字在 **左侧对齐显示** ，则有如下方式：- 例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">        \left.</span><br><span class="line">        \begin&#123;array&#125;&#123;l&#125;</span><br><span class="line">        \text&#123;if $n$ is even:&#125;&amp;n&#x2F;2\\</span><br><span class="line">        \text&#123;if $n$ is odd:&#125;&amp;3n+1</span><br><span class="line">        \end&#123;array&#125;</span><br><span class="line">        \right\&#125;</span><br><span class="line">        &#x3D;f(n)</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>- 显示：$$        \left.        \begin{array}{l}        \text{if $n$ is even:}&n/2\\        \text{if $n$ is odd:}&3n+1        \end{array}        \right\}        =f(n)$$##3．如何使条件表达式适配行高在一些情况下，条件表达式中某些行的行高为非标准高度，此时使用 `\\[2ex]` 语句代替该行末尾的 `\\` 来让编辑器适配。- 例子：|不适配[2ex]||:--:||<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">f(n) &#x3D; </span><br><span class="line">\begin&#123;cases&#125;</span><br><span class="line">\frac&#123;n&#125;&#123;2&#125;,  &amp; \text&#123;if $n$ is even&#125; \\</span><br><span class="line">3n+1, &amp; \text&#123;if $n$ is odd&#125;</span><br><span class="line">\end&#123;cases&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>|适配[2ex]||:--:||<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">f(n) &#x3D; </span><br><span class="line">\begin&#123;cases&#125;</span><br><span class="line">\frac&#123;n&#125;&#123;2&#125;,  &amp; \text&#123;if $n$ is even&#125; \\[2ex]</span><br><span class="line">3n+1, &amp; \text&#123;if $n$ is odd&#125;</span><br><span class="line">\end&#123;cases&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>- 显示：|不适配[2ex]||:--:||$$f(n) =\begin{cases}\frac{n}{2},  & \text{if $n$ is even} \\3n+1, & \text{if $n$ is odd}\end{cases}$$||适配[2ex]||:--:||$$f(n) =\begin{cases}\frac{n}{2},  & \text{if $n$ is even} \\[2ex]3n+1, & \text{if $n$ is odd}\end{cases}$$|**一个 `[ex]` 指一个 "X-Height"，即x字母高度。可以根据情况指定多个 `[ex]`，如 `[3ex]`、`[4ex]` 等。**其实可以在任何地方使用 `\\[2ex]` 语句，只要你觉得合适。#五、数组与表格使用参考##1．如何输入一个数组或表格通常，一个格式化后的表格比单纯的文字或排版后的文字更具有可读性。数组和表格均以 `begin{array}` 开头，并在其后定义列数及每一列的文本对齐属性，`c` `l` `r` 分别代表居中、左对齐及右对齐。若需要插入垂直分割线，在定义式中插入 `|` ，若要插入水平分割线，在下一行输入前插入 `\hline` 。与矩阵相似，每行元素间均须要插入 `&` ，每行元素以 `\\` 结尾，最后以 `end{array}` 结束数组。使用单个数组或表格时无需声明 `$` 或 `$$` 符号。- 例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">\begin&#123;array&#125;&#123;c|lcr&#125;</span><br><span class="line">n &amp; \text&#123;左对齐&#125; &amp; \text&#123;居中对齐&#125; &amp; \text&#123;右对齐&#125; \\</span><br><span class="line">\hline</span><br><span class="line">1 &amp; 0.24 &amp; 1 &amp; 125 \\</span><br><span class="line">2 &amp; -1 &amp; 189 &amp; -8 \\</span><br><span class="line">3 &amp; -20 &amp; 2000 &amp; 1+10i</span><br><span class="line">\end&#123;array&#125;</span><br></pre></td></tr></table></figure>- 显示：\begin{array}{c|lcr}n & \text{左对齐} & \text{居中对齐} & \text{右对齐} \\\hline1 & 0.24 & 1 & 125 \\2 & -1 & 189 & -8 \\3 & -20 & 2000 & 1+10i\end{array}##2．如何输入一个嵌套的数组或表格多个数组/表格可 **互相嵌套** 并组成一组数组/一组表格。使用嵌套前必须声明 `$$` 符号。- 例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">% outer vertical array of arrays 外层垂直表格</span><br><span class="line">\begin&#123;array&#125;&#123;c&#125;</span><br><span class="line">    % inner horizontal array of arrays 内层水平表格</span><br><span class="line">    \begin&#123;array&#125;&#123;cc&#125;</span><br><span class="line">        % inner array of minimum values 内层&quot;最小值&quot;数组</span><br><span class="line">        \begin&#123;array&#125;&#123;c|cccc&#125;</span><br><span class="line">        \text&#123;min&#125; &amp; 0 &amp; 1 &amp; 2 &amp; 3\\</span><br><span class="line">        \hline</span><br><span class="line">        0 &amp; 0 &amp; 0 &amp; 0 &amp; 0\\</span><br><span class="line">        1 &amp; 0 &amp; 1 &amp; 1 &amp; 1\\</span><br><span class="line">        2 &amp; 0 &amp; 1 &amp; 2 &amp; 2\\</span><br><span class="line">        3 &amp; 0 &amp; 1 &amp; 2 &amp; 3</span><br><span class="line">        \end&#123;array&#125;</span><br><span class="line">    &amp;</span><br><span class="line">        % inner array of maximum values 内层&quot;最大值&quot;数组</span><br><span class="line">        \begin&#123;array&#125;&#123;c|cccc&#125;</span><br><span class="line">        \text&#123;max&#125;&amp;0&amp;1&amp;2&amp;3\\</span><br><span class="line">        \hline</span><br><span class="line">        0 &amp; 0 &amp; 1 &amp; 2 &amp; 3\\</span><br><span class="line">        1 &amp; 1 &amp; 1 &amp; 2 &amp; 3\\</span><br><span class="line">        2 &amp; 2 &amp; 2 &amp; 2 &amp; 3\\</span><br><span class="line">        3 &amp; 3 &amp; 3 &amp; 3 &amp; 3</span><br><span class="line">        \end&#123;array&#125;</span><br><span class="line">    \end&#123;array&#125;</span><br><span class="line">    % 内层第一行表格组结束</span><br><span class="line">    \\</span><br><span class="line">    % inner array of delta values 内层第二行Delta值数组</span><br><span class="line">        \begin&#123;array&#125;&#123;c|cccc&#125;</span><br><span class="line">        \Delta&amp;0&amp;1&amp;2&amp;3\\</span><br><span class="line">        \hline</span><br><span class="line">        0 &amp; 0 &amp; 1 &amp; 2 &amp; 3\\</span><br><span class="line">        1 &amp; 1 &amp; 0 &amp; 1 &amp; 2\\</span><br><span class="line">        2 &amp; 2 &amp; 1 &amp; 0 &amp; 1\\</span><br><span class="line">        3 &amp; 3 &amp; 2 &amp; 1 &amp; 0</span><br><span class="line">        \end&#123;array&#125;</span><br><span class="line">        % 内层第二行表格组结束</span><br><span class="line">\end&#123;array&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>- 显示：$$% outer vertical array of arrays 外层垂直表格\begin{array}{c}    % inner horizontal array of arrays 内层水平表格    \begin{array}{cc}        % inner array of minimum values 内层"最小值"数组        \begin{array}{c|cccc}        \text{min} & 0 & 1 & 2 & 3\\        \hline        0 & 0 & 0 & 0 & 0\\        1 & 0 & 1 & 1 & 1\\        2 & 0 & 1 & 2 & 2\\        3 & 0 & 1 & 2 & 3        \end{array}    &        % inner array of maximum values 内层"最大值"数组        \begin{array}{c|cccc}        \text{max}&0&1&2&3\\        \hline        0 & 0 & 1 & 2 & 3\\        1 & 1 & 1 & 2 & 3\\        2 & 2 & 2 & 2 & 3\\        3 & 3 & 3 & 3 & 3        \end{array}    \end{array}    % 内层第一行表格组结束    \\    % inner array of delta values 内层第二行Delta值数组        \begin{array}{c|cccc}        \Delta&0&1&2&3\\        \hline        0 & 0 & 1 & 2 & 3\\        1 & 1 & 0 & 1 & 2\\        2 & 2 & 1 & 0 & 1\\        3 & 3 & 2 & 1 & 0        \end{array}        % 内层第二行表格组结束\end{array}$$##3．如何输入一个方程组使用 `\begin{array}…\end{array}` 和 `\left\{…\right.` 来创建一个方程组。- 例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\left\&#123; </span><br><span class="line">\begin&#123;array&#125;&#123;c&#125;</span><br><span class="line">a_1x+b_1y+c_1z&#x3D;d_1 \\ </span><br><span class="line">a_2x+b_2y+c_2z&#x3D;d_2 \\ </span><br><span class="line">a_3x+b_3y+c_3z&#x3D;d_3</span><br><span class="line">\end&#123;array&#125;</span><br><span class="line">\right. </span><br><span class="line">$$</span><br></pre></td></tr></table></figure>- 显示：$$\left\{ \begin{array}{c}a_1x+b_1y+c_1z=d_1 \\ a_2x+b_2y+c_2z=d_2 \\ a_3x+b_3y+c_3z=d_3\end{array}\right. $$或者使用条件表达式组 `\begin{cases}…\end{cases}` 来实现相同效果：- 例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">\begin&#123;cases&#125;</span><br><span class="line">a_1x+b_1y+c_1z&#x3D;d_1 \\ </span><br><span class="line">a_2x+b_2y+c_2z&#x3D;d_2 \\ </span><br><span class="line">a_3x+b_3y+c_3z&#x3D;d_3</span><br><span class="line">\end&#123;cases&#125;</span><br></pre></td></tr></table></figure>- 显示：\begin{cases}a_1x+b_1y+c_1z=d_1 \\ a_2x+b_2y+c_2z=d_2 \\ a_3x+b_3y+c_3z=d_3\end{cases}#六、连分数使用参考##1．如何输入一个连分式就像输入分式时使用 `\frac` 一样，使用 `\cfrac` 来创建一个连分数。- 例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">x &#x3D; a_0 + \cfrac&#123;1^2&#125;&#123;a_1</span><br><span class="line">          + \cfrac&#123;2^2&#125;&#123;a_2</span><br><span class="line">          + \cfrac&#123;3^2&#125;&#123;a_3 + \cfrac&#123;4^4&#125;&#123;a_4 + \cdots&#125;&#125;&#125;&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>- 显示：$$x = a_0 + \cfrac{1^2}{a_1          + \cfrac{2^2}{a_2          + \cfrac{3^2}{a_3 + \cfrac{4^4}{a_4 + \cdots}}}}$$不要使用普通的 `\frac` 或 `\over` 来创建，否则会看起来 **很恶心** 。- 反例：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">x &#x3D; a_0 + \frac&#123;1^2&#125;&#123;a_1</span><br><span class="line">          + \frac&#123;2^2&#125;&#123;a_2</span><br><span class="line">          + \frac&#123;3^2&#125;&#123;a_3 + \frac&#123;4^4&#125;&#123;a_4 + \cdots&#125;&#125;&#125;&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>- 显示：$$x = a_0 + \frac{1^2}{a_1          + \frac{2^2}{a_2          + \frac{3^2}{a_3 + \frac{4^4}{a_4 + \cdots}}}}$$当然，你可以使用 `\frac` 来表达连分数的 **紧缩记法** 。- 例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">x &#x3D; a_0 + \frac&#123;1^2&#125;&#123;a_1+&#125;</span><br><span class="line">          \frac&#123;2^2&#125;&#123;a_2+&#125;</span><br><span class="line">          \frac&#123;3^2&#125;&#123;a_3 +&#125; \frac&#123;4^4&#125;&#123;a_4 +&#125; \cdots</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>- 显示：$$x = a_0 + \frac{1^2}{a_1+}          \frac{2^2}{a_2+}          \frac{3^2}{a_3 +} \frac{4^4}{a_4 +} \cdots$$连分数通常都太大以至于不易排版，所以建议在连分数前后声明 `$$` 符号，或使用像 `[a0;a1,a2,a3,…]` 一样的紧缩记法。#七、交换图表使用参考##1．如何输入一个交换图表使用一行 `$ \require{AMScd} $` 语句来允许交换图表的显示。声明交换图表后，语法与矩阵相似，在开头使用 `begin{CD}`，在结尾使用 `end{CD}`，在中间插入图表元素，每个元素之间插入 `&` ，并在每行结尾处使用 `\\` 。- 例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$\require&#123;AMScd&#125;$</span><br><span class="line">\begin&#123;CD&#125;</span><br><span class="line">    A @&gt;a&gt;&gt; B\\</span><br><span class="line">    @V b V V\# @VV c V\\</span><br><span class="line">    C @&gt;&gt;d&gt; D</span><br><span class="line">\end&#123;CD&#125;</span><br></pre></td></tr></table></figure>- 显示：$\require{AMScd}$\begin{CD}    A @>a>> B\\    @V b V V\# @VV c V\\    C @>>d> D\end{CD}其中，`@>>>` 代表右箭头、`@<<<` 代表左箭头、`@vvv` 代表下箭头、`@aaa` 代表上箭头、`@="`" 代表水平双实线、`@|` 代表竖直双实线、`@.`代表没有箭头。 在 `@>>>` 的 `>>>` 之间任意插入文字即代表该箭头的注释文字。- 例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">\begin&#123;CD&#125;</span><br><span class="line">    A @&gt;&gt;&gt; B @&gt;&#123;\text&#123;very long label&#125;&#125;&gt;&gt; C \\</span><br><span class="line">    @. @AAA @| \\</span><br><span class="line">    D @&#x3D; E @&lt;&lt;&lt; F</span><br><span class="line">\end&#123;CD&#125;</span><br></pre></td></tr></table></figure>- 显示：\begin{CD}    A @>>> B @>{\text{very long label}}>> C \\    @. @AAA @| \\    D @= E @<<< F\end{CD}在本例中， "very long label"自动延长了它所在箭头以及对应箭头的长度。#八、一些特殊的注意事项|**!! 本段内容为个人翻译，可能有不准确之处 !!**||:--:|These are issues that won't affect the correctness of formulas, but might make them look significantly better or worse. Beginners should feel free to ignore this advice; someone else will correct it for them, or more likely nobody will care.现在指出的小问题并不会影响方程式及公式等的正确显示，但能让它们看起来明显更好看。初学者可无视这些建议，自然会有强迫症患者替你们改掉它的，或者更可能地，根本没人发现这些问题。Don't use `\frac` in exponents or limits of integrals; it looks bad and can be confusing, which is why it is rarely done in professional mathematical typesetting. Write the fraction horizontally, with a slash:在以e为底的指数函数、极限和积分中尽量不要使用 `\frac` 符号：它会使整段函数看起来很怪，而且可能产生歧义。也正是因此它在专业数学排版中几乎从不出现。横着写这些分式，中间使用斜线间隔 `/` （用斜线代替分数线）。- 例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">\begin&#123;array&#125;&#123;cc&#125;</span><br><span class="line">\mathrm&#123;Bad&#125; &amp; \mathrm&#123;Better&#125; \\</span><br><span class="line">\hline \\</span><br><span class="line">e^&#123;i\frac&#123;\pi&#125;2&#125; \quad e^&#123;\frac&#123;i\pi&#125;2&#125;&amp; e^&#123;i\pi&#x2F;2&#125; \\</span><br><span class="line">\int_&#123;-\frac\pi2&#125;^\frac\pi2 \sin x\,dx &amp; \int_&#123;-\pi&#x2F;2&#125;^&#123;\pi&#x2F;2&#125;\sin x\,dx \\</span><br><span class="line">\end&#123;array&#125;</span><br></pre></td></tr></table></figure>- 显示：\begin{array}{cc}\mathrm{Bad} & \mathrm{Better} \\\hline \\e^{i\frac{\pi}2} \quad e^{\frac{i\pi}2}& e^{i\pi/2} \\\int_{-\frac\pi2}^\frac\pi2 \sin x\,dx & \int_{-\pi/2}^{\pi/2}\sin x\,dx \\\end{array}The `|` symbol has the wrong spacing when it is used as a divider, for example in set comprehensions. Use `\mid` instead:`|` 符号在被当作分隔符时会产生错误的间隔，因此在需要分隔时最好使用 `\mid` 来代替它。- 例子:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">\begin&#123;array&#125;&#123;cc&#125;</span><br><span class="line">\mathrm&#123;Bad&#125; &amp; \mathrm&#123;Better&#125; \\</span><br><span class="line">\hline \\</span><br><span class="line">\&#123;x|x^2\in\Bbb Z\&#125; &amp; \&#123;x\mid x^2\in\Bbb Z\&#125; \\</span><br><span class="line">\end&#123;array&#125;</span><br></pre></td></tr></table></figure>- 显示：\begin{array}{cc}\mathrm{Bad} & \mathrm{Better} \\\hline \\\{x|x^2\in\Bbb Z\} & \{x\mid x^2\in\Bbb Z\} \\\end{array}For double and triple integrals, don't use `\int\int` or `\int\int\int`. Instead use the special forms `\iint` and `\iiint`:使用多重积分符号时，不要多次使用 `\int` 来声明，直接使用 `\iint` 来表示 **二重积分** ，使用 `\iiint` 来表示 **三重积分** 等。对于无限次积分，可以用 `\int \cdots \int` 表示。- 例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">\begin&#123;array&#125;&#123;cc&#125;</span><br><span class="line">\mathrm&#123;Bad&#125; &amp; \mathrm&#123;Better&#125; \\</span><br><span class="line">\hline \\</span><br><span class="line">\int\int_S f(x)\,dy\,dx &amp; \iint_S f(x)\,dy\,dx \\</span><br><span class="line">\int\int\int_V f(x)\,dz\,dy\,dx &amp; \iiint_V f(x)\,dz\,dy\,dx</span><br><span class="line">\end&#123;array&#125;</span><br></pre></td></tr></table></figure>- 显示：\begin{array}{cc}\mathrm{Bad} & \mathrm{Better} \\\hline \\\int\int_S f(x)\,dy\,dx & \iint_S f(x)\,dy\,dx \\\int\int\int_V f(x)\,dz\,dy\,dx & \iiint_V f(x)\,dz\,dy\,dx\end{array}$$无限次积分：\int \cdots \int$$Use `\,`, to insert a thin space before differentials; without this $\TeX$ will mash them together:在微分符号前加入 `\,` 来插入一个小的间隔空隙；没有 `\,` 符号的话，$\TeX$ 将会把不同的微分符号堆在一起。- 例子：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">\begin&#123;array&#125;&#123;cc&#125;</span><br><span class="line">\mathrm&#123;Bad&#125; &amp; \mathrm&#123;Better&#125; \\</span><br><span class="line">\hline \\</span><br><span class="line">\iiint_V f(x)&#123;\rm d&#125;z &#123;\rm d&#125;y &#123;\rm d&#125;x &amp; \iiint_V f(x)\,&#123;\rm d&#125;z\,&#123;\rm d&#125;y\,&#123;\rm d&#125;x</span><br><span class="line">\end&#123;array&#125;</span><br></pre></td></tr></table></figure>- 显示：\begin{array}{cc}\mathrm{Bad} & \mathrm{Better} \\\hline \\\iiint_V f(x){\rm d}z {\rm d}y {\rm d}x & \iiint_V f(x)\,{\rm d}z\,{\rm d}y\,{\rm d}x\end{array}---<br>转载自：<a href="https://www.zybuluo.com/codeep/note/163962" target="_blank" rel="noopener">https://www.zybuluo.com/codeep/note/163962</a></`></|$\not<$|\not></p>]]></content>
    
    
    <summary type="html">Markdown</summary>
    
    
    
    <category term="工具" scheme="http://yoursite.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="Markdown" scheme="http://yoursite.com/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>KNN近邻算法学习笔记</title>
    <link href="http://yoursite.com/2020/08/25/KNN%E8%BF%91%E9%82%BB%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2020/08/25/KNN%E8%BF%91%E9%82%BB%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2020-08-25T05:35:55.992Z</published>
    <updated>2020-08-25T05:35:55.992Z</updated>
    
    <content type="html"><![CDATA[<h1 id="K近邻算法"><a href="#K近邻算法" class="headerlink" title="K近邻算法"></a>K近邻算法</h1><p>&amp;emspk近邻法是一种基本分类与回归方法。K近邻法输入为实例的特征向量，对应于特征空间的点，输出为实例的类别，可以取多类。</p><p>&amp;emsp分类时，对于新的实例，根据其k个最近邻的训练实例的类别，通过多数表决等方式进行预测。因此，k近邻法不具有显式的学习过程。</p><p><strong>关键词</strong>：多数表决</p><p>k近邻算法利用训练数据集对特征向量空间进行划分，并作为其分类的模型。</p><h2 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h2><p>输入训练数据集，输出实例所属的类别。</p><ol><li>根据给定的距离度量，在训练集中找出与x最邻近的k个点，涵盖这k个点的x的邻域。</li><li>根据多数表决决定x类别。</li></ol><h2 id="模型"><a href="#模型" class="headerlink" title="模型"></a>模型</h2><p>距离度量包括欧氏距离，曼哈顿距离。</p><p>k值的选择：过大造成欠拟合，过小造成过拟合。</p><p>分类决策规则：多数表决规则</p><h2 id="K近邻算法的实现-kd树"><a href="#K近邻算法的实现-kd树" class="headerlink" title="K近邻算法的实现 kd树"></a>K近邻算法的实现 kd树</h2><p>构造kd树，二叉排序树。</p><p>对kd树进行搜索。</p><h2 id="代码案例解析"><a href="#代码案例解析" class="headerlink" title="代码案例解析"></a>代码案例解析</h2><p>知识总结：近朱者赤近墨者黑</p><ol><li>假设有一个带有标签的样本数据集（训练样本集），其中包含每条数据与所属分类的对应关系。</li><li>输入没有标签的新数据后，将新数据每个特征与样本集中数据对应的特征进行比较。<ol><li>计算新数据与样本数据集中每条数据的距离</li><li>对求得的所有距离进行排序，从小到大，越小表示越相似。</li><li>取前k个样本数据对应的分类标签。</li></ol></li><li>求k个数据中出现次数最多的分类标签作为新数据的分类。</li></ol><p>案例：优化约会网站的配对效果</p><p>&amp;emsp海伦使用约会网站寻找约会对象，经过一段时间后，她发现她曾交往过三种类型的人：</p><ul><li>不喜欢的人</li><li>魅力一般的人</li><li>极具魅力的人</li></ul><p>她希望：</p><ol><li>工作日与魅力一般的人约会</li><li>周末与极具魅力的人约会</li><li>不喜欢的人则直接排除掉</li></ol><p>1、将文本记录转换为numpy的解析程序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">file2matrix</span><span class="params">(filename)</span>:</span></span><br><span class="line">  <span class="string">"""</span></span><br><span class="line"><span class="string">  Desc:</span></span><br><span class="line"><span class="string">  导入训练数据</span></span><br><span class="line"><span class="string">  parameters:</span></span><br><span class="line"><span class="string">  filename:数据文件路径</span></span><br><span class="line"><span class="string">  return:</span></span><br><span class="line"><span class="string">  数据矩阵 returnMat 对应的类别 classLabelVector</span></span><br><span class="line"><span class="string">  """</span></span><br><span class="line">  fr=open(filename) <span class="comment">#读入文件</span></span><br><span class="line">  numberOfLines=len(fr.readlines()) <span class="comment">#得到行的个数</span></span><br><span class="line">  returnMat=zeros((numberOfLines,<span class="number">3</span>)) <span class="comment">#创建范围矩阵，各个位置都是0</span></span><br><span class="line">  classLabelVector=[] <span class="comment">#创建标签列表</span></span><br><span class="line">  fr=open(filename)</span><br><span class="line">  index=<span class="number">0</span></span><br><span class="line">  <span class="keyword">for</span> line <span class="keyword">in</span> fr.readlines(): <span class="comment">#读取一行</span></span><br><span class="line">    line=line.strip() <span class="comment">#去掉首尾</span></span><br><span class="line">    listFromLine=Line.split(<span class="string">'\t'</span>) <span class="comment">#以\t切割字符串，返回列表</span></span><br><span class="line">    returnMat[index,:]=listFromLine[<span class="number">0</span>:<span class="number">3</span>] <span class="comment">#赋给矩阵第index行的三列</span></span><br><span class="line">    classLabel.append(int(listFromLine[<span class="number">-1</span>])) <span class="comment">#将此时的类别添加到标签列表末端</span></span><br><span class="line">    index+=<span class="number">1</span> <span class="comment">#进行下一次循环</span></span><br><span class="line">  <span class="keyword">return</span> returnMat,classLabelVector</span><br></pre></td></tr></table></figure><p>程序解读：</p><p>目标：将文本转化为对应矩阵形式</p><p>2、归一化数据</p><p>其实，归一化是一个让 权重 变为统一的过程。如国际上以美元为结算通用货币，想买入10吨铁矿，用的人民币和美币不同，那么就需要一个统一的标准衡量，规定用美元统一结算，货币本身也是归一化过程。</p><p>归一化方法：</p><ul><li>线性函数转换</li><li>对数函数转换</li><li>反余切函数转换</li></ul><p>代码实现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">auwoNorm</span><span class="params">(dataSet)</span>:</span></span><br><span class="line">  <span class="string">"""</span></span><br><span class="line"><span class="string">  Desc：</span></span><br><span class="line"><span class="string">  归一化特征值，消除特征之间量级不同导致的影响。</span></span><br><span class="line"><span class="string">  parameter：</span></span><br><span class="line"><span class="string">  dataSet：数据集 （矩阵）</span></span><br><span class="line"><span class="string">  return：</span></span><br><span class="line"><span class="string">  归一化后的数据集</span></span><br><span class="line"><span class="string">  归一化公式：Y=（X-Xmin)/(Xmax-Xmin)</span></span><br><span class="line"><span class="string">  """</span></span><br><span class="line">  minVals=dataSet.min(<span class="number">0</span>)<span class="comment">#numpy api 得到数据集中最小最大特征值</span></span><br><span class="line">  maxVals=dataSet.max(<span class="number">0</span>)</span><br><span class="line">  ranges=maxVals-minVals <span class="comment">#极差</span></span><br><span class="line">  normDataSet=zeros（shape（dataSet））<span class="comment">#生成零矩阵</span></span><br><span class="line">  m=dataSet.shape[<span class="number">0</span>] <span class="comment">#返回行数</span></span><br><span class="line">  normDataSet=dataSet-tile(minVals,(m,<span class="number">1</span>))  <span class="comment">#tile函数</span></span><br><span class="line">  normDataSet=normDataSet/tile(ranges,(m,<span class="number">1</span>))</span><br><span class="line">  <span class="keyword">return</span> normDataSet,ranges,minvals</span><br></pre></td></tr></table></figure><h3 id="KNN算法"><a href="#KNN算法" class="headerlink" title="KNN算法"></a>KNN算法</h3><p>对于每一个在数据集中的数据点：</p><ol><li>计算目标的数据点与该数据点的距离</li><li>将距离从小到大排序</li><li>选取前k个最短距离</li><li>选取这K个中最多的分类类别</li><li>返回该类别来作为目标数据点的预测值</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">classify0</span><span class="params">(inX, dataSet, labels, k)</span>:</span></span><br><span class="line">    dataSetSize = dataSet.shape[<span class="number">0</span>]</span><br><span class="line">    <span class="comment">#距离度量 度量公式为欧氏距离</span></span><br><span class="line">    diffMat = tile(inX, (dataSetSize,<span class="number">1</span>)) – dataSet</span><br><span class="line">    sqDiffMat = diffMat**<span class="number">2</span></span><br><span class="line">    sqDistances = sqDiffMat.sum(axis=<span class="number">1</span>)</span><br><span class="line">    distances = sqDistances**<span class="number">0.5</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">#将距离排序: 从小到大</span></span><br><span class="line">    sortedDistIndicies = distances.argsort()</span><br><span class="line">    <span class="comment">#选取前K个最短距离， 选取这K个中最多的分类类别</span></span><br><span class="line">    classCount=&#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(k): </span><br><span class="line">        voteIlabel = labels[sortedDistIndicies[i]]</span><br><span class="line">        classCount[voteIlabel] = classCount.get(voteIlabel,<span class="number">0</span>) + <span class="number">1</span> </span><br><span class="line">    sortedClassCount = sorted(classCount.iteritems(), key=operator.itemgetter(<span class="number">1</span>), reverse=<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">return</span> sortedClassCount[<span class="number">0</span>][<span class="number">0</span>]</span><br></pre></td></tr></table></figure><p><strong>KNN分类器针对约会网站的测试代码</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">datingClassTest</span><span class="params">()</span>:</span></span><br><span class="line">  <span class="string">"""</span></span><br><span class="line"><span class="string">  Desc:</span></span><br><span class="line"><span class="string">  对约会网站的测试方法</span></span><br><span class="line"><span class="string">  parameters:</span></span><br><span class="line"><span class="string">  none</span></span><br><span class="line"><span class="string">  return:</span></span><br><span class="line"><span class="string">  错误数</span></span><br><span class="line"><span class="string">  """</span></span><br><span class="line">  hoRatio=<span class="number">0.1</span> <span class="comment">#测试比例</span></span><br><span class="line">  datingDataMat,datingLabels=file2matrix(<span class="string">"....txt"</span>)</span><br><span class="line">  norMat,ranges,minVals=autoNorm(datingDataMat)<span class="comment">#归一化数据</span></span><br><span class="line">  m=normMat.shape[<span class="number">0</span>]</span><br><span class="line">  numTestVecs=int(m*hoRatio)</span><br><span class="line">  errorCount=<span class="number">0.0</span></span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> range(numTestVecs):</span><br><span class="line">    classifierResult=classify0(normMat[i,:],normMat[numTestVecs:m,:],datingLabels[numTestVecs:m],<span class="number">3</span>)</span><br><span class="line">      <span class="keyword">if</span>(classifierResult!datingLabels[i]):errorCount+=<span class="number">1.0</span></span><br><span class="line">  <span class="keyword">print</span> errorCount</span><br></pre></td></tr></table></figure><p>约会预测函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">handwritingClassTest</span><span class="params">()</span>:</span></span><br><span class="line">  resultList=[<span class="string">'not at all'</span>,<span class="string">'in small doses'</span>,<span class="string">'in large doses'</span>]</span><br><span class="line">  percentTats=float(raw_input(<span class="string">"percentage of time spent playing video games?"</span>))</span><br><span class="line">  ffMiles=float(raw_input(<span class="string">"frequent filer miles earned per year?"</span>))</span><br><span class="line">  iceCream=float(raw_input(<span class="string">"liters of ice cream consumed per year"</span>))</span><br><span class="line">  datingDataMat,datingLabels=file2matrix(<span class="string">'datingTestSet2.txt'</span>)</span><br><span class="line">  normMat,ranges,minVals=autoNorm(datingDataMat)</span><br><span class="line">  inArr=array[ffMiles,percentTats,iceCream]</span><br><span class="line">  classifierResult=classify0((inArr-minVals)/ranges,normMat,datingLabels,<span class="number">3</span>)</span><br><span class="line">  <span class="keyword">print</span> resultList[classifierResult<span class="number">-1</span>]</span><br></pre></td></tr></table></figure><h2 id="项目二-手写数字识别系统"><a href="#项目二-手写数字识别系统" class="headerlink" title="项目二 手写数字识别系统"></a>项目二 手写数字识别系统</h2><p>构造一个能识别数字0到9的基于KNN分类器的 手写数字识别系统</p><p>开发流程</p><ol><li>收集数据：提供文本文件</li><li>准备数据：编写函数，将图像格式转换为分类器使用的向量格式</li><li>分析数据</li><li>训练算法</li><li>测试算法</li><li>使用算法</li></ol><p>将图像文本数据转化为向量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">img2vector</span><span class="params">(filename)</span>:</span></span><br><span class="line">  returnVect=zeros((<span class="number">1</span>,<span class="number">1024</span>))</span><br><span class="line">  fr=open(filename)</span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">32</span>):</span><br><span class="line">    lineStr=fr.readline()</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">32</span>):</span><br><span class="line">      returnVect[<span class="number">0</span>,<span class="number">32</span>*i+j]=int(lineStr[j])</span><br><span class="line">  <span class="keyword">return</span> returnVect</span><br></pre></td></tr></table></figure><p>测试程序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">handwritingClassTest</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 1. 导入数据</span></span><br><span class="line">    hwLabels = []</span><br><span class="line">    trainingFileList = listdir(<span class="string">'data/2.KNN/trainingDigits'</span>)  <span class="comment"># load the training set</span></span><br><span class="line">    m = len(trainingFileList)</span><br><span class="line">    trainingMat = zeros((m, <span class="number">1024</span>))</span><br><span class="line">    <span class="comment"># hwLabels存储0～9对应的index位置， trainingMat存放的每个位置对应的图片向量</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(m):</span><br><span class="line">        fileNameStr = trainingFileList[i]</span><br><span class="line">        fileStr = fileNameStr.split(<span class="string">'.'</span>)[<span class="number">0</span>]  <span class="comment"># take off .txt</span></span><br><span class="line">        classNumStr = int(fileStr.split(<span class="string">'_'</span>)[<span class="number">0</span>])</span><br><span class="line">        hwLabels.append(classNumStr)</span><br><span class="line">        <span class="comment"># 将 32*32的矩阵-&gt;1*1024的矩阵</span></span><br><span class="line">        trainingMat[i, :] = img2vector(<span class="string">'data/2.KNN/trainingDigits/%s'</span> % fileNameStr)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2. 导入测试数据</span></span><br><span class="line">    testFileList = listdir(<span class="string">'data/2.KNN/testDigits'</span>)  <span class="comment"># iterate through the test set</span></span><br><span class="line">    errorCount = <span class="number">0.0</span></span><br><span class="line">    mTest = len(testFileList)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(mTest):</span><br><span class="line">        fileNameStr = testFileList[i]</span><br><span class="line">        fileStr = fileNameStr.split(<span class="string">'.'</span>)[<span class="number">0</span>]  <span class="comment"># take off .txt</span></span><br><span class="line">        classNumStr = int(fileStr.split(<span class="string">'_'</span>)[<span class="number">0</span>])</span><br><span class="line">        vectorUnderTest = img2vector(<span class="string">'data/2.KNN/testDigits/%s'</span> % fileNameStr)</span><br><span class="line">        classifierResult = classify0(vectorUnderTest, trainingMat, hwLabels, <span class="number">3</span>)</span><br><span class="line">        print(<span class="string">"the classifier came back with: %d, the real answer is: %d"</span> % (classifierResult, classNumStr))</span><br><span class="line">        <span class="keyword">if</span> (classifierResult != classNumStr): errorCount += <span class="number">1.0</span></span><br><span class="line">    print(<span class="string">"\nthe total number of errors is: %d"</span> % errorCount)</span><br><span class="line">    print(<span class="string">"\nthe total error rate is: %f"</span> % (errorCount / float(mTest)))</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;K近邻算法&quot;&gt;&lt;a href=&quot;#K近邻算法&quot; class=&quot;headerlink&quot; title=&quot;K近邻算法&quot;&gt;&lt;/a&gt;K近邻算法&lt;/h1&gt;&lt;p&gt;&amp;amp;emspk近邻法是一种基本分类与回归方法。K近邻法输入为实例的特征向量，对应于特征空间的点，输出为实例的类</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>MIT Linear Algebra 一</title>
    <link href="http://yoursite.com/2020/08/18/MIT%20Linear%20Algebra%20%E4%B8%80/"/>
    <id>http://yoursite.com/2020/08/18/MIT%20Linear%20Algebra%20%E4%B8%80/</id>
    <published>2020-08-17T16:00:00.000Z</published>
    <updated>2020-08-18T18:44:38.370Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一讲-解决线形方程"><a href="#第一讲-解决线形方程" class="headerlink" title="第一讲 解决线形方程"></a>第一讲 解决线形方程</h1><h2 id="向量和线形方程"><a href="#向量和线形方程" class="headerlink" title="向量和线形方程"></a>向量和线形方程</h2><h3 id="二维情况"><a href="#二维情况" class="headerlink" title="二维情况"></a>二维情况</h3><p>我们首先来看这样一个式子</p><script type="math/tex; mode=display">x-2y=1 \\3x+2y=11</script><p>把这个方程的左边写成系数矩阵形式也就是</p><script type="math/tex; mode=display">\begin{bmatrix} 1 & 3 \\ 3 & 2 \\ \end{bmatrix}\begin{bmatrix} x\\y   \end{bmatrix}=\begin{bmatrix} 1 \\ 11\\ \end{bmatrix}\\AX=b</script><h4 id="二维图像"><a href="#二维图像" class="headerlink" title="二维图像"></a>二维图像</h4><p>做出图像是什么形式的呢？</p><p><img src= "/img/loading.gif" data-lazy-src="/2020/08/18/MIT Linear Algebra 第一讲/截屏2020-08-18 下午10.43.48.png" alt="截屏2020-08-18 下午10.43.48" style="zoom:50%;"></p><p>两条线的交点就是直线的解。</p><h4 id="二维矩阵形式"><a href="#二维矩阵形式" class="headerlink" title="二维矩阵形式"></a>二维矩阵形式</h4><p>如果把系数矩阵A拆分成列的形式，那么方程就可以如下表示：</p><p><img src= "/img/loading.gif" data-lazy-src="/2020/08/18/MIT Linear Algebra 一/截屏2020-08-18 下午10.56.36.png" alt="截屏2020-08-18 下午10.43.48" style="zoom:50%;"></p><p>那么我们思考一下，这个方程的目的是什么呢？</p><p>目的是如何将 2 ，-1 这个向量和另一个 -1 ，2 向量进行线性组合。求x，y就是求这个线性组合，对于矩阵来说也就是列向量的线性组合。需要求出两个数值得到【0，3】这个向量。</p><h4 id="二维向量表示"><a href="#二维向量表示" class="headerlink" title="二维向量表示"></a>二维向量表示</h4><p>在图像中我们可以将这两个列向量表示出来，并用列向量来表示出b向量。</p><p><img src= "/img/loading.gif" data-lazy-src="/2020/08/18/MIT Linear Algebra 一/截屏2020-08-18 下午10.56.12.png" alt="截屏2020-08-18 下午10.43.48" style="zoom:50%;"></p><p>那么依然是这个图像，思考一个问题：这两个列向量所有的线性组合是什么呢？也就是说x y 选取不同值得时候，我们会得到什么样的结果。</p><p>我们会得到任意的向量，也就是说，通过这两个向量改变系数，我们所得到的向量会布满整个坐标系。</p><p>通过对列向量特定的线性组合，可以求出向量b，而所有的线性组合可以求出所有可能的右侧向量。</p><h3 id="三维情况"><a href="#三维情况" class="headerlink" title="三维情况"></a>三维情况</h3><p>三个方程情况下呢？</p><p><img src= "/img/loading.gif" data-lazy-src="/2020/08/18/MIT Linear Algebra 一/截屏2020-08-18 下午11.00.40.png" alt="截屏2020-08-18 下午10.43.48" style="zoom:50%;"></p><h4 id="三维图像"><a href="#三维图像" class="headerlink" title="三维图像"></a>三维图像</h4><p>画出图像，前两个方程得到一个平面，第三个方程与其交于一点，就是方程的解。</p><p><img src= "/img/loading.gif" data-lazy-src="/2020/08/18/MIT Linear Algebra 一/截屏2020-08-18 下午10.43.48.png" alt="截屏2020-08-18 下午10.43.48" style="zoom:50%;"></p><h4 id="三维矩阵形式"><a href="#三维矩阵形式" class="headerlink" title="三维矩阵形式"></a>三维矩阵形式</h4><p>A是一个3✖️3矩阵，依然类似二元方程写成线性组合的形式如下</p><p><img src= "/img/loading.gif" data-lazy-src="/2020/08/18/MIT Linear Algebra 一/截屏2020-08-18 下午11.04.11.png" alt="截屏2020-08-18 下午10.43.48" style="zoom:50%;"></p><p>也就是说，左边是三个向量的线性组合，我们想要知道，怎样的组合才能得到右面这个向量，同样的画</p><p>出图像</p><p><img src= "/img/loading.gif" data-lazy-src="/2020/08/18/MIT Linear Algebra 一/截屏2020-08-18 下午11.06.28.png" alt="截屏2020-08-18 下午10.43.48" style="zoom:50%;"></p><p>根据我们的方程，我们要做的就是将这三个向量进行组合求得右侧向量，这时你已经看到了，在这个方程中，只要第三个向量就等于代求得b，在之后我们会讲到消元法，在实际工作中都是通过消元法来解得。</p><p>那么如果右面的向量【6，4，2】变了呢？变成其他的向量的话还依然有解吗？用线性组合的语言来说这个问题的话，也就是说，列的线性组合能不能覆盖整个三维空间呢?任意的b也就是三维空间中的所有b。</p><p>对于这个系数矩阵也就是</p><script type="math/tex; mode=display">\begin{bmatrix}1&2&&3\\2 &5&& 2\\6 &-3 &&1\\ \end{bmatrix}</script><p>答案是肯定的。这时A就叫非奇异矩阵，可逆矩阵。</p><h3 id="线性组合讨论"><a href="#线性组合讨论" class="headerlink" title="线性组合讨论"></a>线性组合讨论</h3><p>反过来想，什么时候这三个列向量不能进行线性组合呢？</p><p>举个例子，当三个列向量正好处于同一平面下时，这种情况下答案就是否定的，因为不管怎么组合，我们都得不到平面以外的向量，当b在平面内的时候，有解，在平面外就无解。</p><p>下面我们考虑九维的情况，假设九个方程九个未知数，这样系数矩阵就有9列，每一列都是九维空间的向量，然后可以考虑其线性组合。这样就得到了九维空间中九个向量的线性组合，我们通过线性组合得到b，同样的问题，是否总有解呢。</p><p>有时可以有时不可以，如果选择一些相互不独立的向量，也就是向量之间存在依赖，9列相当于8列，有一列是没有贡献的，那么线性组合就只能覆盖九维空间某八维平面。</p><h3 id="矩阵相乘"><a href="#矩阵相乘" class="headerlink" title="矩阵相乘"></a>矩阵相乘</h3><p>回到正题，目前我们只关注非奇异矩阵，接下来讲矩阵如何相乘</p><script type="math/tex; mode=display">\begin {bmatrix}2&5\\1&3\end{bmatrix}\begin{bmatrix}1\\2\end{bmatrix}</script><p>第一种方法：这个矩阵乘法是列的线性组合也就是</p><script type="math/tex; mode=display">\begin {bmatrix}2&5\\1&3\end{bmatrix}\begin{bmatrix}1\\2\end{bmatrix}=1\begin {bmatrix}2\\1\end{bmatrix}+2\begin{bmatrix}5\\3\end{bmatrix}=\begin{bmatrix}12\\7\end{bmatrix}</script><p>第二种方法：行乘以列的和，这里不做过多介绍，比较容易，我还是倾向于第一种做法</p><p>A成x看做是A各列的线性组合。</p>]]></content>
    
    
    <summary type="html">线性代数笔记</summary>
    
    
    
    <category term="数学" scheme="http://yoursite.com/categories/%E6%95%B0%E5%AD%A6/"/>
    
    
    <category term="线性代数" scheme="http://yoursite.com/tags/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/"/>
    
  </entry>
  
</feed>
